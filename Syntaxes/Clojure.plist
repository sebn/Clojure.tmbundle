<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string></string>
	<key>fileTypes</key>
	<array>
		<string>clj</string>
		<string>cljs</string>
	</array>
  <!-- <key>keyEquivalent</key> -->
  <!-- <string>^~L</string> -->
	<key>name</key>
	<string>Clojure</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>(^[ \t]+)?(?=;)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.comment.leading.clojure</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?!\G)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>;</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.clojure</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\n</string>
					<key>name</key>
					<string>comment.line.semicolon.clojure</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.function-type.clojure</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.clojure</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\b(?i:(fn|def|defn|defn-|definline|defmacro|defproject|defresource|defroutes|ns))\b)(\s+)((\w|\-|\.|\!|\?)*)</string>
			<key>name</key>
			<string>meta.function.clojure</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.constant.clojure</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(#)(\w|[\\+-=&lt;&gt;'"&amp;#])+</string>
			<key>name</key>
			<string>constant.character.clojure</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.clojure</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.clojure</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\*)(\S*)(\*)</string>
			<key>name</key>
			<string>variable.other.global.clojure</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:if|do|let|letfn|loop|recur|throw|try|for|doseq|if-let|when|when-let|when-not|dosync)\b</string>
			<key>name</key>
			<string>keyword.control.clojure</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:eq|neq|and|or)\b</string>
			<key>name</key>
			<string>keyword.operator.clojure</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:null|nil|true|false)\b</string>
			<key>name</key>
			<string>constant.language.clojure</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:cons|car|cdr|cond|lambda|format|setq|setf|quote|eval|append|list|listp|memberp|t|load|progn)\b</string>
			<key>name</key>
			<string>support.function.clojure</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\b</string>
			<key>name</key>
			<string>constant.numeric.clojure</string>
		</dict>
		<dict>
			<key>match</key>
			<string>:[^\s]*</string>
			<key>name</key>
			<string>constant.other.symbol.clojure</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.clojure</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.clojure</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.clojure</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.clojure</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.clojure</string>
	<key>uuid</key>
  <string>DB82770C-7539-42DA-8C51-3F75E49A2E38</string>
</dict>
</plist>
